/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Item;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.LoginPage.LoginPageJPanel;

/**
 *
 * @author swapn
 */
public class CustomerOrderJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderJPanel
     */
    private JPanel container;
    private UserAccount userAccount;
    private EcoSystem ecosystem;
    private DB4OUtil dB4OUtil;

    public CustomerOrderJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem ecosystem, DB4OUtil dB4OUtil) {
        initComponents();
        this.container = userProcessContainer;
        this.ecosystem = ecosystem;
        this.dB4OUtil = dB4OUtil;
        this.userAccount = account;
        displayCombo();
        jPanelCheckout.setVisible(false);
    }

     protected void paintComponent(Graphics g){
        Graphics2D g2d= (Graphics2D)g;
        int width=getWidth();
        int height= getHeight();
        
        Color color1= new Color(0, 105, 146);
        Color color2= new Color(162, 238, 242);
        GradientPaint gp = new GradientPaint(0,0,color1,0,height,color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanelCheckout = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabelTotalQuantity = new javax.swing.JLabel();
        confirmOrderButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaOrderMessage = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabelTotalPrice = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        logoutButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        removeButton = new javax.swing.JButton();
        checkoutButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        changeQtyButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addToCartButton = new javax.swing.JButton();
        viewMenuButton = new javax.swing.JButton();
        jComboRestaurants = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton2.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        backButton2.setText("Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });
        add(backButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 100, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 20)); // NOI18N
        jLabel3.setText("Welcome to Order Panel");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 22, 225, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(416, 61, 12, 373));

        jPanelCheckout.setOpaque(false);
        jPanelCheckout.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 13)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Order Message:");
        jPanelCheckout.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 110, -1));

        jLabelTotalQuantity.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 13)); // NOI18N
        jLabelTotalQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanelCheckout.add(jLabelTotalQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 59, 16));

        confirmOrderButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        confirmOrderButton.setText("Confirm Order");
        confirmOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmOrderButtonActionPerformed(evt);
            }
        });
        jPanelCheckout.add(confirmOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 100, -1));

        jLabel6.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Total price:");
        jPanelCheckout.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 110, -1));

        jLabel7.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("(All prices inclusive taxes)");
        jPanelCheckout.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 194, -1));

        jLabel5.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 13)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Total items in cart:");
        jPanelCheckout.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 110, -1));

        jTextAreaOrderMessage.setColumns(20);
        jTextAreaOrderMessage.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 10)); // NOI18N
        jTextAreaOrderMessage.setRows(5);
        jScrollPane3.setViewportView(jTextAreaOrderMessage);

        jPanelCheckout.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(114, 110, 160, 70));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel8.setText("Order Summary");
        jPanelCheckout.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 99, 30));

        jLabelTotalPrice.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 13)); // NOI18N
        jLabelTotalPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanelCheckout.add(jLabelTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 60, 59, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-activity-history-24.png"))); // NOI18N
        jPanelCheckout.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 50, 50));

        add(jPanelCheckout, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, -1, 220));

        logoutButton1.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        logoutButton1.setText("Logout");
        logoutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButton1ActionPerformed(evt);
            }
        });
        add(logoutButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, 94, -1));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        removeButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        removeButton.setText("Remove Item");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        jPanel1.add(removeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 112, -1));

        checkoutButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        checkoutButton.setText("Checkout");
        checkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutButtonActionPerformed(evt);
            }
        });
        jPanel1.add(checkoutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 106, -1));

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Total Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartTable.setShowGrid(false);
        jScrollPane2.setViewportView(cartTable);
        if (cartTable.getColumnModel().getColumnCount() > 0) {
            cartTable.getColumnModel().getColumn(0).setResizable(false);
            cartTable.getColumnModel().getColumn(1).setResizable(false);
            cartTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 38, 348, 92));

        changeQtyButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        changeQtyButton.setText("Change Quantity");
        changeQtyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeQtyButtonActionPerformed(evt);
            }
        });
        jPanel1.add(changeQtyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel4.setText("Cart Preview");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 0, 100, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-shopping-cart-24.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, -20, 30, 70));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 269, -1, -1));

        jPanel2.setOpaque(false);

        addToCartButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        addToCartButton.setText("Add to Cart");
        addToCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCartButtonActionPerformed(evt);
            }
        });

        viewMenuButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        viewMenuButton.setText("View Menu");
        viewMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewMenuButtonActionPerformed(evt);
            }
        });

        jComboRestaurants.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboRestaurants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboRestaurantsActionPerformed(evt);
            }
        });

        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Item Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        menuTable.setShowGrid(false);
        jScrollPane1.setViewportView(menuTable);
        if (menuTable.getColumnModel().getColumnCount() > 0) {
            menuTable.getColumnModel().getColumn(0).setResizable(false);
            menuTable.getColumnModel().getColumn(1).setResizable(false);
            menuTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addToCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jComboRestaurants, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboRestaurants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewMenuButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addToCartButton)
                .addContainerGap())
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 67, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/giphy Food_1.gif"))); // NOI18N
        jLabel10.setText("jLabel10");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 250, 410, 230));
    }// </editor-fold>//GEN-END:initComponents

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void jComboRestaurantsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboRestaurantsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboRestaurantsActionPerformed

    private void viewMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMenuButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) menuTable.getModel();
        if(viewMenuButton.getText().equals("View Menu")){
            dtm.setRowCount(0);
            Object[] row = new Object[3];
            if(jComboRestaurants.getSelectedItem().toString().equals("Select Restaurant")){
                JOptionPane.showMessageDialog(null, "Please select restaurant.");
            }
            else{
                jComboRestaurants.setEnabled(false);
                viewMenuButton.setText("Change");
                for (String s : this.ecosystem.getRestaurantDirectory().getRestDirectory().keySet()) {
                    if (this.ecosystem.getRestaurantDirectory().getRestDirectory().get(s).getRestName().equals(jComboRestaurants.getSelectedItem().toString())) {
                        for (String i : this.ecosystem.getRestaurantDirectory().getRestDirectory().get(s).getItemList().getItemList().keySet()) {
                            row[0] = this.ecosystem.getRestaurantDirectory().getRestDirectory().get(s).getItemList().getItemList().get(i).getItemId();
                            row[1] = this.ecosystem.getRestaurantDirectory().getRestDirectory().get(s).getItemList().getItemList().get(i).getItemName();
                            row[2] = this.ecosystem.getRestaurantDirectory().getRestDirectory().get(s).getItemList().getItemList().get(i).getItemPrice();
                            dtm.addRow(row);
                        }
                    }
                }
            }
        }
        else if(viewMenuButton.getText().equals("Change")){
            DefaultTableModel dtmCart = (DefaultTableModel)cartTable.getModel();
            int result=JOptionPane.showConfirmDialog(null, "All cart items will be removed.");
            if(result==JOptionPane.YES_OPTION){
                dtm.setRowCount(0);
                dtmCart.setRowCount(0);
                jComboRestaurants.setEnabled(true);
                viewMenuButton.setText("View Menu");
            }
        }
        

    }//GEN-LAST:event_viewMenuButtonActionPerformed

    private void addToCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCartButtonActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame("Please enter quantity");
        Restaurant r = this.ecosystem.getRestaurantDirectory().findResttaurantByName(String.valueOf(jComboRestaurants.getSelectedItem()));
        DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
        DefaultTableModel menuModel = (DefaultTableModel) menuTable.getModel();
        Object[] row = new Object[3];
        int rowNumber = menuTable.getSelectedRow();
        if (rowNumber == -1) {
            JOptionPane.showMessageDialog(null, "Please select an item to add.");
        } else {
            int qty = Integer.parseInt(JOptionPane.showInputDialog(frame, "Please enter quantity"));
            if (qty <= 0) {
                JOptionPane.showMessageDialog(null, "Quantity cannot be empty or negative.");
            } else {
                double totalPrice = Double.parseDouble(menuModel.getValueAt(rowNumber, 2).toString())
                        * qty;
                row[0] = r.getItemList().getItemList().get(menuModel.getValueAt(rowNumber, 0).toString());
                row[1] = totalPrice;
                row[2] = qty;

                dtm.addRow(row);
            }
        }


    }//GEN-LAST:event_addToCartButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
        dtm.removeRow(cartTable.getSelectedRow());
        JOptionPane.showMessageDialog(null, "Item removed");
    }//GEN-LAST:event_removeButtonActionPerformed

    private void checkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutButtonActionPerformed
        // TODO add your handling code here:
        if (cartTable.getRowCount() != 0) {
            double totalPrice = 0;
            int totalQty = 0;
            DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
            for (int count = 0; count < dtm.getRowCount(); count++) {
                totalPrice += Double.parseDouble(dtm.getValueAt(count, 1).toString());
                totalQty += Integer.parseInt(dtm.getValueAt(count, 2).toString());
            }

            jPanelCheckout.setVisible(true);
            jLabelTotalQuantity.setText(String.valueOf(totalQty));
            jLabelTotalPrice.setText(String.valueOf(totalPrice));
        } else {
            JOptionPane.showMessageDialog(null, "Add items to cart before checking out.");
        }


    }//GEN-LAST:event_checkoutButtonActionPerformed

    private void confirmOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmOrderButtonActionPerformed
        // TODO add your handling code here:

        Restaurant r = this.ecosystem.getRestaurantDirectory().findResttaurantByName(String.valueOf(jComboRestaurants.getSelectedItem()));
        Order no = r.getRestAdmin().getOrders().newOrder();
        Customer c = this.ecosystem.getCustomerDirectory().findCustomerByUserName(userAccount.getUsername());
        no.setCustomerId(c.getCustId());
        no.setCustomerName(c.getFirstName());
        no.setCustomerNotes(jTextAreaOrderMessage.getText());
        no.setRestaurantName(String.valueOf(jComboRestaurants.getSelectedItem()));
        no.setDeliveryManName("Yet to be assigned");
        HashMap<Item,Integer> orderItems = new HashMap();

        DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
        double total=0;
        for (int count = 0; count < dtm.getRowCount(); count++) {
            orderItems.put(r.getItemList().findItemByName(dtm.getValueAt(count, 0).toString()),Integer.parseInt(dtm.getValueAt(count, 2).toString()));
            total+=Double.parseDouble(dtm.getValueAt(count, 1).toString());
        }
        no.setItemList(orderItems);
        no.setOrderTotal(total);
        no.setStatus("Ordered");
        this.userAccount.getOrders().newOrder(no);
        this.ecosystem.getOrderDirectory().newOrder(no);
        JOptionPane.showMessageDialog(null, "Your order has been placed. Wait for the restaurant to confirm it.");
        
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
        
    }//GEN-LAST:event_confirmOrderButtonActionPerformed

    private void changeQtyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeQtyButtonActionPerformed
        // TODO add your handling code here:
        JFrame frame = new JFrame("Please enter new quantity");
        DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
        int rowNumber = cartTable.getSelectedRow();
        if (rowNumber != -1) {
            int qty = Integer.parseInt(JOptionPane.showInputDialog(frame, "Please enter new quantity"));
            if (qty <= 0) {
                JOptionPane.showMessageDialog(null, "Quantity cannot be empty or negative.");
            } else {
                double price = Double.parseDouble(dtm.getValueAt(rowNumber, 1).toString())
                        / Double.parseDouble(dtm.getValueAt(rowNumber, 2).toString());
                dtm.setValueAt(price*qty, rowNumber, 1);
                dtm.setValueAt(qty, rowNumber, 2);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select item from cart before changing quantity.");
        }


    }//GEN-LAST:event_changeQtyButtonActionPerformed

    private void logoutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButton1ActionPerformed
        // TODO add your handling code here:
        container.removeAll();
        LoginPageJPanel lpp= new LoginPageJPanel(container, ecosystem, dB4OUtil);
        container.add("LoginPageJPanel", lpp);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_logoutButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCartButton;
    private javax.swing.JButton backButton2;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton changeQtyButton;
    private javax.swing.JButton checkoutButton;
    private javax.swing.JButton confirmOrderButton;
    private javax.swing.JComboBox<String> jComboRestaurants;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelTotalPrice;
    private javax.swing.JLabel jLabelTotalQuantity;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCheckout;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaOrderMessage;
    private javax.swing.JButton logoutButton1;
    private javax.swing.JTable menuTable;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton viewMenuButton;
    // End of variables declaration//GEN-END:variables

    private void displayCombo() {
        jComboRestaurants.removeAllItems();
        jComboRestaurants.addItem("Select Restaurant");
        for (String s : this.ecosystem.getRestaurantDirectory().getRestDirectory().keySet()) {
            jComboRestaurants.addItem(this.ecosystem.getRestaurantDirectory().findRestaurant(s).toString());
        }

    }
}
