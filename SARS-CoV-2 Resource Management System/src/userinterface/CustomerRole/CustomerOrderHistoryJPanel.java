/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Item;

import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.time.format.DateTimeFormatter;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import userinterface.LoginPage.LoginPageJPanel;

/**
 *
 * @author raunak
 */
public class CustomerOrderHistoryJPanel extends javax.swing.JPanel {

    private JPanel container;
    private UserAccount userAccount;
    private EcoSystem ecosystem;
    private DB4OUtil dB4OUtil;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
     protected void paintComponent(Graphics g){
        Graphics2D g2d= (Graphics2D)g;
        int width=getWidth();
        int height= getHeight();
        
        Color color1= new Color(0, 105, 146);
        Color color2= new Color(162, 238, 242);
        GradientPaint gp = new GradientPaint(0,0,color1,0,height,color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
    }
    
    public CustomerOrderHistoryJPanel(JPanel userProcessContainer, UserAccount account,EcoSystem ecosystem,DB4OUtil dB4OUtil) {
        initComponents();
        
        this.container=userProcessContainer;
        this.ecosystem=ecosystem;
        this.dB4OUtil=dB4OUtil;
        this.userAccount = account;
        //valueLabel.setText(enterprise.getName());
        jPanelOrderSummary.setVisible(false);
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        dtm.setRowCount(0);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm");
        for(String s:this.userAccount.getOrders().getOrderDirectory().keySet()){
            Object row[] = new Object[4];
            row[0]= this.userAccount.getOrders().getOrderDirectory().get(s).getOrderDateTime().format(formatter);
            row[1]=this.userAccount.getOrders().getOrderDirectory().get(s).getOrderId();
            row[2]=this.userAccount.getOrders().getOrderDirectory().get(s).getDeliveryManName();
            row[3]=this.userAccount.getOrders().getOrderDirectory().get(s).getStatus();
            dtm.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        backButton2 = new javax.swing.JButton();
        cancelOrderButton = new javax.swing.JButton();
        viewOrderButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanelOrderSummary = new javax.swing.JPanel();
        jLabelOrderId2 = new javax.swing.JLabel();
        jLabelOrderID = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelOrderId = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        jLabelOrderId3 = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jLabelOrderId4 = new javax.swing.JLabel();
        jLabelOrderDate = new javax.swing.JLabel();
        jLabelOrderId1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableItems = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        logoutButton1 = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setOpaque(false);

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Date & Time", "OrderID", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setOpaque(false);
        workRequestJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workRequestJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 64, 547, 109));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 20)); // NOI18N
        jLabel3.setText("Order History");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 134, -1));

        backButton2.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        backButton2.setText("Back");
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });
        add(backButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 100, -1));

        cancelOrderButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        cancelOrderButton.setText("Cancel Order");
        cancelOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOrderButtonActionPerformed(evt);
            }
        });
        add(cancelOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(421, 185, 110, -1));

        viewOrderButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        viewOrderButton.setText("View Order");
        viewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewOrderButtonActionPerformed(evt);
            }
        });
        add(viewOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 185, 100, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 219, 580, 10));

        jPanelOrderSummary.setOpaque(false);

        jLabelOrderId2.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        jLabelOrderId2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOrderId2.setText("Total Price:");

        jLabelOrderID.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        jLabelOrderID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel4.setText("Order Summary");

        jLabelOrderId.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        jLabelOrderId.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOrderId.setText("OrderID:");

        jLabelOrderId3.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        jLabelOrderId3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOrderId3.setText("Status:");

        jLabelPrice.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        jLabelPrice.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabelOrderId4.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        jLabelOrderId4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOrderId4.setText("Date and Time:");

        jLabelOrderDate.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        jLabelOrderDate.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabelOrderId1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        jLabelOrderId1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelOrderId1.setText("Order Items:");

        jScrollPane2.setOpaque(false);

        jTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item Name", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableItems.setOpaque(false);
        jScrollPane2.setViewportView(jTableItems);
        if (jTableItems.getColumnModel().getColumnCount() > 0) {
            jTableItems.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-us-dollar.gif"))); // NOI18N

        javax.swing.GroupLayout jPanelOrderSummaryLayout = new javax.swing.GroupLayout(jPanelOrderSummary);
        jPanelOrderSummary.setLayout(jPanelOrderSummaryLayout);
        jPanelOrderSummaryLayout.setHorizontalGroup(
            jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(134, 134, 134)
                        .addComponent(jLabelOrderId4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabelOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                                .addComponent(jLabelOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabelOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelOrderId2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelOrderId3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabelOrderId1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanelOrderSummaryLayout.setVerticalGroup(
            jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabelOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelOrderId4))
                .addGap(24, 24, 24)
                .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOrderSummaryLayout.createSequentialGroup()
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelOrderId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelOrderId2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelOrderId3)
                            .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOrderSummaryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelOrderId1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        add(jPanelOrderSummary, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 235, 560, -1));

        logoutButton1.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        logoutButton1.setText("Logout");
        logoutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButton1ActionPerformed(evt);
            }
        });
        add(logoutButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(678, 6, 94, -1));

        refreshButton.setFont(new java.awt.Font("Leelawadee UI Semilight", 1, 12)); // NOI18N
        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        add(refreshButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 35, 100, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-activity-history-24.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, 40, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void workRequestJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workRequestJTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_workRequestJTableMouseClicked

    private void cancelOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOrderButtonActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        int rowNumber= workRequestJTable.getSelectedRow();
        if(rowNumber!=-1){
            String status= String.valueOf(dtm.getValueAt(rowNumber, 3));
            if(status.equals("Cancelled") | status.equals("Rejected") | status.equals("Delivered")){
                JOptionPane.showMessageDialog(null, "Order has already been cancelled, rejected or delivered.");
            }else if(status.equals("Pending")){
                JOptionPane.showMessageDialog(null, "Order is out for delivery and cannot be cancelled.");
            }
            else{
                Customer c=this.ecosystem.getCustomerDirectory().findCustomerByUserName(userAccount.getUsername());
                Order o=c.getCustomerAccount().getOrders().getOrderDirectory().get(dtm.getValueAt(rowNumber, 1));
                int result=JOptionPane.showConfirmDialog(null, "Confirm cancellation?");
                if(result==JOptionPane.YES_OPTION){
                    o.setStatus("Cancelled");
                    o.setDeliveryManName("-NA-");
                    JOptionPane.showMessageDialog(null, "Order cancelled.");
                    dtm.removeRow(rowNumber);
                    populateRequestTable();
                }
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select an order to cancel.");
        }
        
    }//GEN-LAST:event_cancelOrderButtonActionPerformed

    private void viewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewOrderButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)workRequestJTable.getModel();
        int rowNumber= workRequestJTable.getSelectedRow();
        if(rowNumber!=-1){
            jPanelOrderSummary.setVisible(true);
            Customer c=this.ecosystem.getCustomerDirectory().findCustomerByUserName(userAccount.getUsername());
            Order o=c.getCustomerAccount().getOrders().getOrderDirectory().get(dtm.getValueAt(rowNumber, 1).toString());
            
            jLabelOrderID.setText(o.getOrderId());
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM-dd-yyyy HH:mm");
            jLabelOrderDate.setText(o.getOrderDateTime().format(formatter));
            jLabelPrice.setText(String.valueOf(o.getOrderTotal()));
            
            DefaultTableModel dtmItems= (DefaultTableModel)jTableItems.getModel();
            dtmItems.setRowCount(0);
            for(Item i : o.getItemList().keySet()){
                Object [] row = new Object[2];
                row[0]= i.getItemName();
                row[1]= o.getItemList().get(i);
                dtmItems.addRow(row);
            }
            if(o.getStatus().equals("Ordered")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.yellow);
//                jProgressBar.s
                jProgressBar.setValue(25);
            }
            else if(o.getStatus().equals("Accepted")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.orange);
                jProgressBar.setValue(50);
            }
            else if(o.getStatus().equals("Rejected")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.red);
                jProgressBar.setValue(1);
            }
            else if(o.getStatus().equals("Assigned")){
                jProgressBar.setStringPainted(true);
                jProgressBar.setForeground(Color.orange);
                jProgressBar.setValue(75);
            }
            else if(o.getStatus().equals("Delivered")){
                jProgressBar.setForeground(Color.green);
                jProgressBar.setValue(100);
            }
            else if(o.getStatus().equals("Cancelled")){
                jProgressBar.setForeground(Color.red);
                jProgressBar.setValue(0);
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select an order.");
        }
        
    }//GEN-LAST:event_viewOrderButtonActionPerformed

    private void logoutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButton1ActionPerformed
        // TODO add your handling code here:
        container.removeAll();
        LoginPageJPanel lpp= new LoginPageJPanel(container, ecosystem, dB4OUtil);
        container.add("LoginPageJPanel", lpp);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_logoutButton1ActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        populateRequestTable();
    }//GEN-LAST:event_refreshButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton2;
    private javax.swing.JButton cancelOrderButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelOrderDate;
    private javax.swing.JLabel jLabelOrderID;
    private javax.swing.JLabel jLabelOrderId;
    private javax.swing.JLabel jLabelOrderId1;
    private javax.swing.JLabel jLabelOrderId2;
    private javax.swing.JLabel jLabelOrderId3;
    private javax.swing.JLabel jLabelOrderId4;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JPanel jPanelOrderSummary;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableItems;
    private javax.swing.JButton logoutButton1;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton viewOrderButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
