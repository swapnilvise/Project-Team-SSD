/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author swapn
 */
public class ManageEmployeesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeesJPanel
     */
    private JPanel container;
    private EcoSystem ecosystem;
    private DB4OUtil dB4OUtil;

    public ManageEmployeesJPanel(JPanel container, EcoSystem ecosystem, DB4OUtil dB4OUtil) {
        initComponents();
        this.container = container;
        this.ecosystem = ecosystem;
        this.dB4OUtil = dB4OUtil;
        populateTable();
        jPanel1.setVisible(false);
        jPanelAssignAdmin.setVisible(false);
    }
    
    protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        int width = getWidth();
        int height = getHeight();

        Color color1 = new Color(0, 105, 146);
        Color color2 = new Color(162, 238, 242);
        GradientPaint gp = new GradientPaint(0, 0, color1, 0, height, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        logoutButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeJTable = new javax.swing.JTable();
        assignAdminButton = new javax.swing.JButton();
        removeEmployeeButton = new javax.swing.JButton();
        jPanelAssignAdmin = new javax.swing.JPanel();
        assignButton = new javax.swing.JButton();
        jComboRestaurant = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        addEmployeeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labelPassword = new javax.swing.JLabel();
        labelFirstName = new javax.swing.JLabel();
        jTextFieldUserName = new javax.swing.JTextField();
        jTextFieldPassword = new javax.swing.JTextField();
        labelusername = new javax.swing.JLabel();
        jTextFieldFirstName = new javax.swing.JTextField();
        addEmpButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 100, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 20)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage Employees ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 62, 267, -1));

        logoutButton1.setBackground(new java.awt.Color(0, 0, 0));
        logoutButton1.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        logoutButton1.setForeground(new java.awt.Color(255, 255, 255));
        logoutButton1.setText("Logout");
        logoutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButton1ActionPerformed(evt);
            }
        });
        add(logoutButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 10, 94, -1));

        employeeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name", "Admin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                employeeJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(employeeJTable);
        if (employeeJTable.getColumnModel().getColumnCount() > 0) {
            employeeJTable.getColumnModel().getColumn(0).setResizable(false);
            employeeJTable.getColumnModel().getColumn(1).setResizable(false);
            employeeJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 107, 337, 109));

        assignAdminButton.setBackground(new java.awt.Color(0, 0, 0));
        assignAdminButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        assignAdminButton.setForeground(new java.awt.Color(255, 255, 255));
        assignAdminButton.setText("Assign as Admin");
        assignAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignAdminButtonActionPerformed(evt);
            }
        });
        add(assignAdminButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 160, -1));

        removeEmployeeButton.setBackground(new java.awt.Color(0, 0, 0));
        removeEmployeeButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        removeEmployeeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeEmployeeButton.setText("Remove Employee");
        removeEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEmployeeButtonActionPerformed(evt);
            }
        });
        add(removeEmployeeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        jPanelAssignAdmin.setBackground(new java.awt.Color(0, 0, 0));
        jPanelAssignAdmin.setForeground(new java.awt.Color(255, 255, 255));
        jPanelAssignAdmin.setOpaque(false);

        assignButton.setBackground(new java.awt.Color(0, 0, 0));
        assignButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        assignButton.setForeground(new java.awt.Color(255, 255, 255));
        assignButton.setText("Assign");
        assignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignButtonActionPerformed(evt);
            }
        });

        jComboRestaurant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboRestaurant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboRestaurantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAssignAdminLayout = new javax.swing.GroupLayout(jPanelAssignAdmin);
        jPanelAssignAdmin.setLayout(jPanelAssignAdminLayout);
        jPanelAssignAdminLayout.setHorizontalGroup(
            jPanelAssignAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAssignAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(assignButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanelAssignAdminLayout.setVerticalGroup(
            jPanelAssignAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAssignAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAssignAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(assignButton)
                    .addComponent(jComboRestaurant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        add(jPanelAssignAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/me_1.gif"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 62, 360, 385));

        addEmployeeButton.setBackground(new java.awt.Color(0, 0, 0));
        addEmployeeButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        addEmployeeButton.setForeground(new java.awt.Color(255, 255, 255));
        addEmployeeButton.setText("Add Employee");
        addEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeButtonActionPerformed(evt);
            }
        });
        add(addEmployeeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setOpaque(false);

        labelPassword.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        labelPassword.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelPassword.setText("Password:");

        labelFirstName.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        labelFirstName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelFirstName.setText("Employee Name:");

        jTextFieldUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUserNameActionPerformed(evt);
            }
        });

        jTextFieldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPasswordActionPerformed(evt);
            }
        });

        labelusername.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 12)); // NOI18N
        labelusername.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelusername.setText("User Name:");

        jTextFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFirstNameActionPerformed(evt);
            }
        });

        addEmpButton.setBackground(new java.awt.Color(0, 0, 0));
        addEmpButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        addEmpButton.setForeground(new java.awt.Color(255, 255, 255));
        addEmpButton.setText("Add");
        addEmpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addEmpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelusername, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jTextFieldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelusername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEmpButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, 150));

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(188, 188, 188));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("<> with ♡ by Team Coding Pirates ");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel13MouseExited(evt);
            }
        });
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 770, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backButtonActionPerformed

    private void logoutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButton1ActionPerformed
        // TODO add your handling code here:
        container.removeAll();
        JPanel blankJP = new JPanel();
        container.add("blank", blankJP);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_logoutButton1ActionPerformed

    private void employeeJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_employeeJTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeJTableMouseClicked

    private void assignAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignAdminButtonActionPerformed
        // TODO add your handling code here:
        
        assignAdminButton.setVisible(false);
        jComboRestaurant.removeAllItems();
        DefaultTableModel dtm = (DefaultTableModel) employeeJTable.getModel();
        int rowNumber = employeeJTable.getSelectedRow();
        if (rowNumber != -1) {
            if(!dtm.getValueAt(rowNumber, 2).equals("--NA--")){
                JOptionPane.showMessageDialog(null, "Cannot assign as employee is already an admin.");
                dtm.removeRow(rowNumber);
                jPanelAssignAdmin.setVisible(false);
                assignAdminButton.setVisible(true);
                populateTable();
            }
            else{
                jPanelAssignAdmin.setVisible(true);
                jComboRestaurant.addItem("Select Restaurant");
                for (String s : this.ecosystem.getRestaurantDirectory().getRestDirectory().keySet()) {
                    jComboRestaurant.addItem(this.ecosystem.getRestaurantDirectory().findRestaurant(s).toString());
                }
            }
            dtm.removeRow(rowNumber);
            populateTable();
        } else {
            JOptionPane.showMessageDialog(null, "Please select employee to assign.");
            jPanelAssignAdmin.setVisible(false);
            assignAdminButton.setVisible(true);
        }
        
    }//GEN-LAST:event_assignAdminButtonActionPerformed

    private void removeEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEmployeeButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) employeeJTable.getModel();
        int rowNumber = employeeJTable.getSelectedRow();
        if (rowNumber != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Confirm?");
            if (result == JOptionPane.YES_OPTION) {
                DeliveryMan d = this.ecosystem.getDeliveryManDirectory().findDeliveryMan(dtm.getValueAt(rowNumber, 0).toString());
                this.ecosystem.getUserAccountDirectory().removeUserAccount(d.getDeliveryManAccount().getUsername());
                this.ecosystem.getDeliveryManDirectory().removeDeliveryMan(dtm.getValueAt(rowNumber, 0).toString());
                dtm.removeRow(rowNumber);
                populateTable();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select employee to remove.");
        }
    }//GEN-LAST:event_removeEmployeeButtonActionPerformed

    private void jComboRestaurantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboRestaurantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboRestaurantActionPerformed

    private void assignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) employeeJTable.getModel();
        int rowNumber = employeeJTable.getSelectedRow();
        if (jComboRestaurant.getSelectedItem().toString().equals("Select Restaurant")) {
            JOptionPane.showMessageDialog(null, "Please select restaurant to be assigned");
        } else {
            Restaurant r = this.ecosystem.getRestaurantDirectory().findResttaurantByName(jComboRestaurant.getSelectedItem().toString());
            Employee e = this.ecosystem.getEmployeeDirectory().findEmployee(dtm.getValueAt(rowNumber, 0).toString());
            r.setRestAdmin(e.getUserAccount());
            JOptionPane.showMessageDialog(null, "Admin Assigned.");
            dtm.removeRow(rowNumber);
            populateTable();
            jPanelAssignAdmin.setVisible(false);
        }

    }//GEN-LAST:event_assignButtonActionPerformed

    private void addEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeButtonActionPerformed
        // TODO add your handling code here:
        jPanel1.setVisible(true);
    }//GEN-LAST:event_addEmployeeButtonActionPerformed

    private void jTextFieldFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFirstNameActionPerformed

    private void jTextFieldUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUserNameActionPerformed

    private void jTextFieldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPasswordActionPerformed

    private void addEmpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmpButtonActionPerformed
        // TODO add your handling code here:
        if(jTextFieldFirstName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "First Name cannot be empty.");
        }else if(jTextFieldUserName.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "User Name cannot be empty.");
        }else if(jTextFieldPassword.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Password cannot be empty.");
        }
        else if(this.ecosystem.getUserAccountDirectory().authenticateUser(jTextFieldUserName.getText(), jTextFieldPassword.getText())!=null){
            JOptionPane.showMessageDialog(null, "Username alreay taken.");
        }
        else{
            Employee e= this.ecosystem.getEmployeeDirectory().createEmployee(jTextFieldFirstName.getText());
            UserAccount user=this.ecosystem.getUserAccountDirectory().createUserAccount(jTextFieldUserName.getText(), jTextFieldPassword.getText(), new AdminRole());
            e.setUserAccount(user);
            JOptionPane.showMessageDialog(null, "Employee Added");
            jPanel1.setVisible(false);
            populateTable();
        }
        
        
    }//GEN-LAST:event_addEmpButtonActionPerformed

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        // TODO add your handling code here:

        jLabel3.setFont(new Font(jLabel3.getFont().getName(), Font.PLAIN, 19));
    }//GEN-LAST:event_jLabel13MouseEntered

    private void jLabel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseExited
        // TODO add your handling code here:

        jLabel3.setFont(new Font(jLabel3.getFont().getName(), Font.PLAIN, 18));
    }//GEN-LAST:event_jLabel13MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmpButton;
    private javax.swing.JButton addEmployeeButton;
    private javax.swing.JButton assignAdminButton;
    private javax.swing.JButton assignButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable employeeJTable;
    private javax.swing.JComboBox<String> jComboRestaurant;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAssignAdmin;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldPassword;
    private javax.swing.JTextField jTextFieldUserName;
    private javax.swing.JLabel labelFirstName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelusername;
    private javax.swing.JButton logoutButton1;
    private javax.swing.JButton removeEmployeeButton;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) employeeJTable.getModel();
        dtm.setRowCount(0);
        for (String s : this.ecosystem.getEmployeeDirectory().getEmployeeList().keySet()) {
            Employee e = this.ecosystem.getEmployeeDirectory().getEmployeeList().get(s);
            Object row[] = new Object[3];
            row[0] = e.getEmpId();
            row[1] = e.getName();
            row[2] = "--NA--";
            for (String st : this.ecosystem.getRestaurantDirectory().getRestDirectory().keySet()) {
                if (this.ecosystem.getRestaurantDirectory().getRestDirectory().get(st).getRestAdmin().getUsername().equals(e.getUserAccount().getUsername())) {
                    row[2] = this.ecosystem.getRestaurantDirectory().getRestDirectory().get(st).getRestName();
                }
            }
            dtm.addRow(row);
        }

    }
}
