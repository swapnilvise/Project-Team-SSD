/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.DB4OUtil.DB4OUtil;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.LoginPage.LoginPageJPanel;
import userinterface.LoginPage.SignUpJPanel;

/**
 *
 * @author swapn
 */
public class ManageDeliveryManJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageDeliveryManJPanel
     */
    
    private JPanel container;
    private EcoSystem ecosystem;
    private DB4OUtil dB4OUtil;
    
    public ManageDeliveryManJPanel(JPanel container,EcoSystem ecosystem,DB4OUtil dB4OUtil) {
        initComponents();
        this.container= container;
        this.ecosystem= ecosystem;
        this.dB4OUtil= dB4OUtil;
        populateTable();
    }

    protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;
        int width = getWidth();
        int height = getHeight();

        Color color1 = new Color(0, 105, 146);
        Color color2 = new Color(162, 238, 242);
        GradientPaint gp = new GradientPaint(0, 0, color1, 0, height, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryManListJTable = new javax.swing.JTable();
        removeDeliveryManButton = new javax.swing.JButton();
        logoutButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        addDeliveryManButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setBackground(new java.awt.Color(0, 0, 0));
        backButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 100, -1));

        deliveryManListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Delivery Man ID", "Delivery Man Name", "Orders Delivered"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        deliveryManListJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deliveryManListJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(deliveryManListJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 360, 109));

        removeDeliveryManButton.setBackground(new java.awt.Color(0, 0, 0));
        removeDeliveryManButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        removeDeliveryManButton.setText("Remove Delivery Man");
        removeDeliveryManButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDeliveryManButtonActionPerformed(evt);
            }
        });
        add(removeDeliveryManButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 244, -1, -1));

        logoutButton1.setBackground(new java.awt.Color(0, 0, 0));
        logoutButton1.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        logoutButton1.setText("Logout");
        logoutButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButton1ActionPerformed(evt);
            }
        });
        add(logoutButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 10, 94, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 2, 20)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manage Delivery Men");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 78, 267, -1));

        addDeliveryManButton.setBackground(new java.awt.Color(0, 0, 0));
        addDeliveryManButton.setFont(new java.awt.Font("Segoe UI Light", 2, 16)); // NOI18N
        addDeliveryManButton.setText("Add Delivery Man");
        addDeliveryManButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliveryManButtonActionPerformed(evt);
            }
        });
        add(addDeliveryManButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 244, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/0662b810dfd17f87fc7519d018cf6335-removebg-preview.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 420, 440));

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(188, 188, 188));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("<> with â™¡ by Team Coding Pirates ");
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel13MouseExited(evt);
            }
        });
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 770, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed

        container.remove(this);
        CardLayout layout = (CardLayout)container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_backButtonActionPerformed

    private void deliveryManListJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deliveryManListJTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deliveryManListJTableMouseClicked

    private void removeDeliveryManButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDeliveryManButtonActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) deliveryManListJTable.getModel();
        int rowNumber = deliveryManListJTable.getSelectedRow();
        if (rowNumber != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Confirm?");
            if (result == JOptionPane.YES_OPTION) {
                DeliveryMan d=this.ecosystem.getDeliveryManDirectory().findDeliveryMan(dtm.getValueAt(rowNumber, 0).toString());
                this.ecosystem.getUserAccountDirectory().removeUserAccount(d.getDeliveryManAccount().getUsername());
                this.ecosystem.getDeliveryManDirectory().removeDeliveryMan(dtm.getValueAt(rowNumber, 0).toString());
                dtm.removeRow(rowNumber);
                populateTable();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Please select delivery man to remove.");
        }
    }//GEN-LAST:event_removeDeliveryManButtonActionPerformed

    private void logoutButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButton1ActionPerformed
        // TODO add your handling code here:
        container.removeAll();
        LoginPageJPanel lpp= new LoginPageJPanel(container, ecosystem, dB4OUtil);
        container.add("LoginPageJPanel", lpp);
        CardLayout crdLyt = (CardLayout) container.getLayout();
        crdLyt.next(container);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_logoutButton1ActionPerformed

    private void addDeliveryManButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeliveryManButtonActionPerformed
        // TODO add your handling code here:
        SignUpJPanel sup= new SignUpJPanel(container, ecosystem, dB4OUtil,"DeliveryMan");
        container.add("SignUpJPanel",sup);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_addDeliveryManButtonActionPerformed

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        // TODO add your handling code here:

        jLabel3.setFont(new Font(jLabel3.getFont().getName(), Font.PLAIN, 19));
    }//GEN-LAST:event_jLabel13MouseEntered

    private void jLabel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseExited
        // TODO add your handling code here:

        jLabel3.setFont(new Font(jLabel3.getFont().getName(), Font.PLAIN, 18));
    }//GEN-LAST:event_jLabel13MouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDeliveryManButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable deliveryManListJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutButton1;
    private javax.swing.JButton removeDeliveryManButton;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) deliveryManListJTable.getModel();
        dtm.setRowCount(0);
        for (String s : this.ecosystem.getDeliveryManDirectory().getDeliveryManList().keySet()) {
            DeliveryMan d = this.ecosystem.getDeliveryManDirectory().getDeliveryManList().get(s);
            Object row[] = new Object[3];
            row[0] = d.getDelId();
            row[1] = d.getFirstName();
            int count=0;
            for(String st: d.getDeliveryManAccount().getOrders().getOrderDirectory().keySet()){
                if(d.getDeliveryManAccount().getOrders().getOrderDirectory().get(st).getStatus().equals("Delivered")){
                    count++;
                }
            }
            row[2] = count;
            dtm.addRow(row);
        }
    }
}
