/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Patient;
import Model.Person;
import Model.PersonDirectory;
import Model.VitalSign;
import Model.Encounter_History;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author swapn
 */
public class ViewFullVitalHistory extends javax.swing.JPanel {
    private JPanel bottom_panel;
    Person person;
    Patient patient;
    Encounter_History history;
    PersonDirectory PRD;

    /**
     * Creates new form ViewFullVitalHistory
     */
    public ViewFullVitalHistory(JPanel bottom_panel, Person person, Encounter_History history, PersonDirectory PRD) {
        initComponents();
        this.bottom_panel = bottom_panel;
        this.person = person;
        this.history = history;
        txt_PatientName.setText(person.getPersonLastName() + ", " + person.getPersonFirstName());
        txt_PatientAddress.setText(person.getPersonStreetName()+", Apt No. - " + person.getPersonAptNo()+ ", " + person.getPersonCity() + ", " + person.getPersonState() +
                                    " " + person.getPersonZipCode());
        txt_PatientCommunity.setText(person.getPersonZipCode());
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Title = new javax.swing.JLabel();
        lbl_PatientName = new javax.swing.JLabel();
        txt_PatientName = new javax.swing.JTextField();
        lbl_PatientAddress = new javax.swing.JLabel();
        txt_PatientAddress = new javax.swing.JTextField();
        txt_PatientCommunity = new javax.swing.JTextField();
        lbl_PatientCommunity = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_VitalSignsHistory = new javax.swing.JTable();
        btn_Save1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lbl_Title.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        lbl_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Title.setText("FULL VITAL SIGNS HISTORY FOR PATIENT");
        lbl_Title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_PatientName.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        lbl_PatientName.setText("Patient Name : ");

        txt_PatientName.setEditable(false);
        txt_PatientName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        lbl_PatientAddress.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        lbl_PatientAddress.setText("Address : ");

        txt_PatientAddress.setEditable(false);
        txt_PatientAddress.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        txt_PatientCommunity.setEditable(false);
        txt_PatientCommunity.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        lbl_PatientCommunity.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        lbl_PatientCommunity.setText("Community : ");

        tbl_VitalSignsHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Date and Time", "Respiratory Rate", "Heart Rate", "Blood Pressure", "Temperature (in Â°F)", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_VitalSignsHistory);

        btn_Save1.setBackground(new java.awt.Color(204, 0, 0));
        btn_Save1.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_Save1.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save1.setText("Go Back");
        btn_Save1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Save1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_Save1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_PatientName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_PatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_PatientAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_PatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_PatientCommunity)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_PatientCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1310, Short.MAX_VALUE)
                    .addComponent(lbl_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lbl_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_PatientName)
                    .addComponent(txt_PatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_PatientAddress)
                    .addComponent(txt_PatientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_PatientCommunity)
                    .addComponent(txt_PatientCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_Save1)
                .addContainerGap(266, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Save1ActionPerformed
        // TODO add your handling code here:
        bottom_panel.remove(this);
        CardLayout layout = (CardLayout) bottom_panel.getLayout();
        layout.previous(bottom_panel);
    }//GEN-LAST:event_btn_Save1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Save1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_PatientAddress;
    private javax.swing.JLabel lbl_PatientCommunity;
    private javax.swing.JLabel lbl_PatientName;
    private javax.swing.JLabel lbl_Title;
    private javax.swing.JTable tbl_VitalSignsHistory;
    private javax.swing.JTextField txt_PatientAddress;
    private javax.swing.JTextField txt_PatientCommunity;
    private javax.swing.JTextField txt_PatientName;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tbl_VitalSignsHistory.getModel();
        model.setRowCount(0);
        if (person != null) {
            ArrayList<VitalSign> vitalSignList = person.getPatient().getVitalSignHistory().getHistory();
            
            if (vitalSignList.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No vital signs found. Please"
                        + " add vital signs", "Error", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            for (VitalSign vitalSign : vitalSignList) {
                Object[] row = new Object[6];
                row[0] = vitalSign;
                row[1] = vitalSign.getRespiratoryRate();
                row[2] = vitalSign.getHeartRate();
                row[3] = vitalSign.getBloodPressure();
                row[4] = vitalSign.getTemperature();
                row[5] = vitalSign.getStatus();
                model.addRow(row);
            }
        }
        
//        for (Person person: PRD.getPersonDirectory())
//        {
//            Object[] row = new Object[6];
////            row[0] = cr.getCar_DriverLastName() + "," + cr.getCar_DriverFirstName();
//            row[0] = person;
//            row[1] = person.getPatient().getVitalSignHis;
//            row[2] = pr.getPersonStreetName();
//            row[3] = ZipCode;
//            model.addRow(row);
//        }
    }
}
