/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

//import backup.Person_old;
import Model.Encounter_History;
import Model.Patient;
import Model.Person;
import Model.PersonDirectory;
import Model.VitalSign;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author swapn
 */
public class ViewPersonJPanel extends javax.swing.JPanel {

    private JPanel bottom_panel;
    Person person;
    PersonDirectory PRD;
    Patient patient;
    Encounter_History ehistory;
    private Integer i;
//    String LastNameOld;
//    String FirstNameOld;
//    String DOBold;
//    String Ageold;
//    String UniqueIDold;
//    String StreetNameold;
//    String AptNoOld;
//    String CityOld;
//    String
    String PatientID;
    Integer RespiratoryRate;
    Integer HeartRate;
    Integer BloodPressure;
    double Weight;
    double Temperature;
    String Status;

    /**
     * Creates new form ViewPersonJPanel
     */
    public ViewPersonJPanel(JPanel bottom_panel, PersonDirectory PRD) {
        initComponents();
        this.PRD = PRD;
        this.bottom_panel = bottom_panel;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_PersonDirectory = new javax.swing.JTable();
        btn_ViewDriverDetails = new javax.swing.JButton();
        btn_DeleteRecord = new javax.swing.JButton();
        lbl_title = new javax.swing.JLabel();
        lbl_Name = new javax.swing.JLabel();
        txt_LastName = new javax.swing.JTextField();
        lbl_FirstName = new javax.swing.JLabel();
        txt_FirstName = new javax.swing.JTextField();
        txt_DOB = new javax.swing.JTextField();
        lbl_DOB = new javax.swing.JLabel();
        lbl_Age = new javax.swing.JLabel();
        txt_Age = new javax.swing.JTextField();
        lbl_Street_Name = new javax.swing.JLabel();
        txt_Street_Name = new javax.swing.JTextField();
        lbl_ApartmentNo = new javax.swing.JLabel();
        txt_ApartmentNo = new javax.swing.JTextField();
        lbl_City = new javax.swing.JLabel();
        txt_City = new javax.swing.JTextField();
        lbl_State = new javax.swing.JLabel();
        lbl_Zipcode = new javax.swing.JLabel();
        lbl_Country = new javax.swing.JLabel();
        txt_Zipcode = new javax.swing.JTextField();
        txt_Country = new javax.swing.JTextField();
        txt_State = new javax.swing.JTextField();
        btn_Save = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_Save1 = new javax.swing.JButton();
        lbl_Street_Name1 = new javax.swing.JLabel();
        txt_UniqueID = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        tbl_PersonDirectory.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tbl_PersonDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Street Name", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_PersonDirectory);

        btn_ViewDriverDetails.setBackground(new java.awt.Color(204, 0, 0));
        btn_ViewDriverDetails.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_ViewDriverDetails.setForeground(new java.awt.Color(255, 255, 255));
        btn_ViewDriverDetails.setText("View Details");
        btn_ViewDriverDetails.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_ViewDriverDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ViewDriverDetailsActionPerformed(evt);
            }
        });

        btn_DeleteRecord.setBackground(new java.awt.Color(204, 0, 0));
        btn_DeleteRecord.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_DeleteRecord.setForeground(new java.awt.Color(255, 255, 255));
        btn_DeleteRecord.setText("Delete Record");
        btn_DeleteRecord.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_DeleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_DeleteRecordActionPerformed(evt);
            }
        });

        lbl_title.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        lbl_title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_title.setText("VIEW AND MODIFY PERSON DIRECTORY");
        lbl_title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_Name.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_Name.setText("* Last Name : ");

        txt_LastName.setEditable(false);
        txt_LastName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_LastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_LastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_LastNameActionPerformed(evt);
            }
        });

        lbl_FirstName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_FirstName.setText("* First Name ( Given Name ) : ");

        txt_FirstName.setEditable(false);
        txt_FirstName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_FirstName.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txt_DOB.setEditable(false);
        txt_DOB.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_DOB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_DOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DOBActionPerformed(evt);
            }
        });

        lbl_DOB.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_DOB.setText("* Date of Birth (MM/DD/YYYY) : ");

        lbl_Age.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Age.setText("Age : ");

        txt_Age.setEditable(false);
        txt_Age.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_Age.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_Age.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_AgeActionPerformed(evt);
            }
        });

        lbl_Street_Name.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Street_Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Street_Name.setText("* Street Name :");
        lbl_Street_Name.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txt_Street_Name.setEditable(false);
        txt_Street_Name.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_Street_Name.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbl_ApartmentNo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_ApartmentNo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ApartmentNo.setText("Apartment Number, Suite, etc. :");
        lbl_ApartmentNo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txt_ApartmentNo.setEditable(false);
        txt_ApartmentNo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_ApartmentNo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbl_City.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_City.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_City.setText("* City : ");
        lbl_City.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txt_City.setEditable(false);
        txt_City.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_City.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbl_State.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_State.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_State.setText("* State : ");
        lbl_State.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_Zipcode.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Zipcode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Zipcode.setText("* ZIP Code : ");
        lbl_Zipcode.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbl_Country.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Country.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Country.setText("* Country :");
        lbl_Country.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txt_Zipcode.setEditable(false);
        txt_Zipcode.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_Zipcode.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txt_Country.setEditable(false);
        txt_Country.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_Country.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txt_State.setEditable(false);
        txt_State.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_State.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btn_Save.setBackground(new java.awt.Color(204, 0, 0));
        btn_Save.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_Save.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save.setText("Save");
        btn_Save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SaveActionPerformed(evt);
            }
        });

        btn_edit.setBackground(new java.awt.Color(204, 0, 0));
        btn_edit.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_edit.setForeground(new java.awt.Color(255, 255, 255));
        btn_edit.setText("Edit");
        btn_edit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_Save1.setBackground(new java.awt.Color(204, 0, 0));
        btn_Save1.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_Save1.setForeground(new java.awt.Color(255, 255, 255));
        btn_Save1.setText("Back");
        btn_Save1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_Save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Save1ActionPerformed(evt);
            }
        });

        lbl_Street_Name1.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lbl_Street_Name1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_Street_Name1.setText("Unique ID : ");
        lbl_Street_Name1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txt_UniqueID.setEditable(false);
        txt_UniqueID.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_UniqueID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Save1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btn_ViewDriverDetails)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_DeleteRecord))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(145, 145, 145)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_Name)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_FirstName)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_City)
                                        .addGap(25, 25, 25)
                                        .addComponent(txt_City, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_State)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_State, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_Zipcode)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_Zipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_Country)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_Country, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_Street_Name)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_Street_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbl_ApartmentNo)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_ApartmentNo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btn_Save)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_edit))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lbl_Street_Name1)
                                            .addComponent(lbl_Age)
                                            .addComponent(lbl_DOB))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txt_DOB)
                                            .addComponent(txt_Age)
                                            .addComponent(txt_UniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lbl_title, javax.swing.GroupLayout.PREFERRED_SIZE, 1368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lbl_title)
                .addGap(18, 18, 18)
                .addComponent(btn_Save1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_ViewDriverDetails)
                            .addComponent(btn_DeleteRecord)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_LastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Name))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_FirstName))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_DOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_DOB))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Age))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_UniqueID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Street_Name1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Street_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Street_Name))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ApartmentNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_ApartmentNo))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_City))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_State)
                            .addComponent(txt_State, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_Zipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Zipcode))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_Country)
                            .addComponent(txt_Country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_Save)
                            .addComponent(btn_edit))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_ViewDriverDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ViewDriverDetailsActionPerformed
        // TODO add your handling code here:
        btn_edit.enable();
        Integer SelectedRowIndex = tbl_PersonDirectory.getSelectedRow();
        if (SelectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbl_PersonDirectory.getModel();
        Person selectedPerson = (Person) model.getValueAt(SelectedRowIndex, 0);
        txt_LastName.setText(selectedPerson.getPersonLastName());
        txt_FirstName.setText(selectedPerson.getPersonFirstName());
        txt_DOB.setText(selectedPerson.getPersonDOB());
        txt_Age.setText(selectedPerson.getPersonAge().toString());
        txt_UniqueID.setText(selectedPerson.getPersonUniqueID());
        txt_Street_Name.setText(selectedPerson.getPersonStreetName());
        txt_ApartmentNo.setText(selectedPerson.getPersonAptNo());
        txt_City.setText(selectedPerson.getPersonCity());
        txt_State.setText(selectedPerson.getPersonState());
        txt_Zipcode.setText(selectedPerson.getPersonZipCode());
        txt_Country.setText(selectedPerson.getPersonCountry());
        PatientID = selectedPerson.getPatient().getPatientID();
        this.person = selectedPerson;
    }//GEN-LAST:event_btn_ViewDriverDetailsActionPerformed

    private void btn_DeleteRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_DeleteRecordActionPerformed
        // TODO add your handling code here:
        i = 1;
        deletePerson();
        populateTable();
    }//GEN-LAST:event_btn_DeleteRecordActionPerformed

    private void txt_LastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_LastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_LastNameActionPerformed

    private void txt_DOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_DOBActionPerformed

    private void btn_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SaveActionPerformed
        // TODO add your handling code here:
        JOptionPane message = new JOptionPane();
        int errorCode = check_validations();

        switch (errorCode) {
            case 1:
                message.showMessageDialog(this,
                        "Name cannot be empty and has to be only alphabets");
                break;
            case 2:
                message.showMessageDialog(this,
                        "Invalid DOB");
                break;
            case 3:
                message.showMessageDialog(this,
                        "Invalid ZipCode");
                break;
            default:
                i = 0;
                String LastName = txt_LastName.getText();
                String FirstName = txt_FirstName.getText();
                String DOB = txt_DOB.getText();
                Integer Age = Integer.parseInt(txt_Age.getText());
                String UniqueID = txt_UniqueID.getText();
                String StreetName = txt_Street_Name.getText();
                String AptNo = txt_ApartmentNo.getText();
                String City = txt_City.getText();
                String State = txt_State.getText();
                String ZipCode = txt_Zipcode.getText();
                String Country = txt_Country.getText();

//                ArrayList<VitalSign> vitalSignList = this.person.getPatient().getVitalSignHistory().getHistory();
//                PatientID = UniqueID;
//                this.person = new Person();
//                
//                deletePerson();
//               
//                Person person = PRD.addNewPerson();
//                person.setLast_Name(txt_LastName.getText());
//                person.setFirst_Name(txt_FirstName.getText());
//                person.setDOB(txt_DOB.getText());
//                person.setAge(Integer.parseInt(txt_Age.getText()));
//                person.setStreet_Name(txt_Street_Name.getText());
//                person.setApt_No(txt_ApartmentNo.getText());
//                person.setCity(txt_City.getText());
//                person.setState(txt_State.getText());
//                person.setZip_Code(txt_Zipcode.getText());
//                System.out.println(person.getZip_Code());
//                person.setCountry(txt_Country.getText());
                this.person.setPersonLastName(LastName);
                this.person.setPersonFirstName(FirstName);
                this.person.setPersonDOB(DOB);
                this.person.setPersonAge(Age);
                this.person.setPersonUniqueID(UniqueID);
                this.person.setPersonStreetName(StreetName);
                this.person.setPersonAptNo(AptNo);
                this.person.setPersonCity(City);
                this.person.setPersonState(State);
                this.person.setPersonZipCode(ZipCode);
                this.person.setPersonCountry(Country);

                Patient p = this.person.getPatient();
                p.setPatientID(PatientID);

//                VitalSign vs = new VitalSign();
//                for (VitalSign vitalSign : vitalSignList) {
//                    VitalSign vs = p.getVitalSignHistory().createAndAddVitalSign();
//                    vs.setRespiratoryRate(vitalSign.getRespiratoryRate());
//                    vs.setHeartRate(vitalSign.getHeartRate());
//                    vs.setBloodPressure(vitalSign.getBloodPressure());
//                    vs.setWeight(vitalSign.getWeight());
//                    vs.setTemperature(vitalSign.getTemperature());
//                    vs.setStatus(vitalSign.getStatus());
//                    vs.setTimestamp(vitalSign.getTimestamp());
//
//                }

                JOptionPane.showMessageDialog(this, "Record Updated successfully.");

                txt_LastName.setText("");
                txt_FirstName.setText("");
                txt_DOB.setText("");
                txt_Age.setText("");
                txt_UniqueID.setText("");
                txt_Street_Name.setText("");
                txt_ApartmentNo.setText("");
                txt_City.setText("");
                txt_State.setText("");
                txt_Country.setText("");
                txt_Zipcode.setText("");

                populateTable();

        }

    }//GEN-LAST:event_btn_SaveActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        // TODO add your handling code here:
        btn_Save.enable();
        if (txt_LastName.getText().isBlank() || txt_FirstName.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Please select a Person from the table to edit.");
        } else {
            txt_LastName.setEditable(true);
            txt_FirstName.setEditable(true);
            txt_DOB.setEditable(true);
            txt_Age.setEditable(true);
            txt_UniqueID.setEditable(true);
            txt_Street_Name.setEditable(true);
            txt_ApartmentNo.setEditable(true);
            txt_City.setEditable(true);
            txt_State.setEditable(true);
            txt_Zipcode.setEditable(true);
            txt_Country.setEditable(true);

        }
    }//GEN-LAST:event_btn_editActionPerformed

    private void txt_AgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_AgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_AgeActionPerformed

    private void btn_Save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Save1ActionPerformed
        // TODO add your handling code here:
        bottom_panel.remove(this);
        CardLayout layout = (CardLayout) bottom_panel.getLayout();
        layout.previous(bottom_panel);
    }//GEN-LAST:event_btn_Save1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_DeleteRecord;
    private javax.swing.JButton btn_Save;
    private javax.swing.JButton btn_Save1;
    private javax.swing.JButton btn_ViewDriverDetails;
    private javax.swing.JButton btn_edit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Age;
    private javax.swing.JLabel lbl_ApartmentNo;
    private javax.swing.JLabel lbl_City;
    private javax.swing.JLabel lbl_Country;
    private javax.swing.JLabel lbl_DOB;
    private javax.swing.JLabel lbl_FirstName;
    private javax.swing.JLabel lbl_Name;
    private javax.swing.JLabel lbl_State;
    private javax.swing.JLabel lbl_Street_Name;
    private javax.swing.JLabel lbl_Street_Name1;
    private javax.swing.JLabel lbl_Zipcode;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JTable tbl_PersonDirectory;
    private javax.swing.JTextField txt_Age;
    private javax.swing.JTextField txt_ApartmentNo;
    private javax.swing.JTextField txt_City;
    private javax.swing.JTextField txt_Country;
    private javax.swing.JTextField txt_DOB;
    private javax.swing.JTextField txt_FirstName;
    private javax.swing.JTextField txt_LastName;
    private javax.swing.JTextField txt_State;
    private javax.swing.JTextField txt_Street_Name;
    private javax.swing.JTextField txt_UniqueID;
    private javax.swing.JTextField txt_Zipcode;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tbl_PersonDirectory.getModel();
        model.setRowCount(0);
        String ZipCode;

        for (Person person : PRD.getPersonDirectory()) {

            Object[] row = new Object[4];
//            row[0] = cr.getCar_DriverLastName() + "," + cr.getCar_DriverFirstName();
            row[0] = person;
            row[1] = person.getPersonFirstName();
            row[2] = person.getPersonStreetName();
//            System.out.println(pr.getZip_Code().toString());
            ZipCode = person.getPersonZipCode();
            System.out.println(ZipCode);
            row[3] = ZipCode;
            model.addRow(row);
        }
    }

    private int check_validations() {
        int errorCode = 0;
        boolean errorcode_ZIPCode;
        errorcode_ZIPCode = Pattern.matches("\\d{5}", txt_Zipcode.getText());

        if (txt_LastName.getText().isEmpty()
                | !Pattern.matches("[a-zA-Z]+", txt_LastName.getText())) {
            errorCode = 1;
        } else if (!txt_FirstName.getText().isEmpty()
                & !Pattern.matches("[a-zA-Z]+", txt_FirstName.getText())) {
            errorCode = 1;
        } else if (txt_DOB.getText().isEmpty()
                | !Pattern.matches(
                        "(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])\\/([0-9]{4})$",
                        txt_DOB.getText())) {
            errorCode = 2;
        } else if (errorcode_ZIPCode == false) {
            errorCode = 3;
        }
        return errorCode;
    }

    private void deletePerson() {
        Integer SelectedRowIndex = tbl_PersonDirectory.getSelectedRow();
        if (SelectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tbl_PersonDirectory.getModel();
        Person selectedPerson = (Person) model.getValueAt(SelectedRowIndex, 0);
        String PersonName = selectedPerson.getPersonFirstName() + ", " + selectedPerson.getPersonLastName();
        PRD.deletePerson(selectedPerson);
        if (i == 1) {
            JOptionPane.showMessageDialog(this, "Driver Details for " + PersonName + " has been deleted");
        }

    }
}
