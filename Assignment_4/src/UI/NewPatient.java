/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

//import backup.Patient_old;
//import backup.Person_old;
import Model.Patient;
import Model.Person;
import Model.PersonDirectory;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author swapn
 */
public class NewPatient extends javax.swing.JPanel {

    private JPanel bottom_panel;
    Person pr;
    Patient patient;
    PersonDirectory PRD;
//    PatientDirectory PTD;
    boolean personfound;
    Period Age;
    boolean errorcode_DOB;
    String UniqueID;

    /**
     * Creates new form NewPatient
     */
    public NewPatient(JPanel bottom_panel, PersonDirectory PRD) {
        initComponents();
        this.bottom_panel = bottom_panel;
        this.PRD = PRD;
//        this.pr = pr;
//        this.patient = patient;
//        this.PTD = PTD;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_Save = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        txt_Age = new javax.swing.JTextField();
        lbl_PersonalInfo_Title = new javax.swing.JLabel();
        lbl_Name = new javax.swing.JLabel();
        txt_LastName = new javax.swing.JTextField();
        txt_FirstName = new javax.swing.JTextField();
        lbl_FirstName = new javax.swing.JLabel();
        lbl_DOB = new javax.swing.JLabel();
        txt_DOB = new javax.swing.JTextField();
        lbl_Age = new javax.swing.JLabel();
        lbl_Age1 = new javax.swing.JLabel();
        txt_UniqueID = new javax.swing.JTextField();
        lbl_Name1 = new javax.swing.JLabel();
        lbl_SEARCH = new javax.swing.JButton();
        lbl_title = new javax.swing.JLabel();
        lbl_title1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_Save.setBackground(new java.awt.Color(204, 0, 0));
        lbl_Save.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        lbl_Save.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Save.setText("Sign Up");
        lbl_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_SaveActionPerformed(evt);
            }
        });
        add(lbl_Save, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 511, -1, -1));

        btn_back.setBackground(new java.awt.Color(204, 0, 0));
        btn_back.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        btn_back.setForeground(new java.awt.Color(255, 255, 255));
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 168, -1, -1));

        txt_Age.setEditable(false);
        txt_Age.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_Age.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        add(txt_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(263, 430, 42, -1));

        lbl_PersonalInfo_Title.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        lbl_PersonalInfo_Title.setText("PATIENT INFORMATION");
        add(lbl_PersonalInfo_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 169, -1, -1));

        lbl_Name.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_Name.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_Name.setText("Last Name : ");
        add(lbl_Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 305, -1, -1));

        txt_LastName.setEditable(false);
        txt_LastName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_LastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_LastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_LastNameActionPerformed(evt);
            }
        });
        add(txt_LastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 302, 195, -1));

        txt_FirstName.setEditable(false);
        txt_FirstName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_FirstName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_FirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_FirstNameActionPerformed(evt);
            }
        });
        add(txt_FirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 344, 195, -1));

        lbl_FirstName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_FirstName.setText("First Name ( Given Name ) : ");
        add(lbl_FirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 347, -1, -1));

        lbl_DOB.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_DOB.setText("Date of Birth (MM/DD/YYYY) : ");
        add(lbl_DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 390, -1, -1));

        txt_DOB.setEditable(false);
        txt_DOB.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_DOB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_DOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DOBActionPerformed(evt);
            }
        });
        add(txt_DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 387, 195, -1));

        lbl_Age.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_Age.setText("Age : ");
        add(lbl_Age, new org.netbeans.lib.awtextra.AbsoluteConstraints(213, 433, -1, -1));

        lbl_Age1.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        lbl_Age1.setForeground(new java.awt.Color(204, 0, 0));
        lbl_Age1.setText("Patient ID will be same as Unique ID.");
        add(lbl_Age1, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 475, -1, -1));

        txt_UniqueID.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txt_UniqueID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_UniqueID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_UniqueIDActionPerformed(evt);
            }
        });
        add(txt_UniqueID, new org.netbeans.lib.awtextra.AbsoluteConstraints(266, 260, 195, -1));

        lbl_Name1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        lbl_Name1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_Name1.setText("Unique ID : ");
        add(lbl_Name1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 263, -1, -1));

        lbl_SEARCH.setBackground(new java.awt.Color(204, 0, 0));
        lbl_SEARCH.setFont(new java.awt.Font("Calibri", 2, 14)); // NOI18N
        lbl_SEARCH.setForeground(new java.awt.Color(255, 255, 255));
        lbl_SEARCH.setText("Seach Person ");
        lbl_SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_SEARCHActionPerformed(evt);
            }
        });
        add(lbl_SEARCH, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 511, -1, -1));

        lbl_title.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lbl_title.setText("Patient can only be created if a person profile exists.");
        add(lbl_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 206, -1, -1));

        lbl_title1.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lbl_title1.setText("Please enter the Unique-ID of the person and click on search person to continue.");
        add(lbl_title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 227, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/Person with a cold (1).gif"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_SaveActionPerformed
        // TODO add your handling code here
        JOptionPane message = new JOptionPane();
        int errorCode = check_validations();

        switch (errorCode) {
            case 1:
                message.showMessageDialog(this,
                        "Name cannot be empty and has to be only alphabets");
                break;
            case 2:
                message.showMessageDialog(this,
                        "Invalid DOB");
                break;
            case 3:
                message.showMessageDialog(this,
                        "Invalid ZipCode");
                break;
            default:
//                personfound = false;
//                check_Personexistance();
//                if (personfound == false) {
//                   message.showMessageDialog(this,"Person with Unique ID : "+ txt_UniqueID + " not found. Please Sign up the person and then continue.");                       
//                   break; 
//                } else {

//                Person pr = new Person(); 
//                pr.setLast_Name(txt_LastName.getText());
//                pr.setFirst_Name(txt_FirstName.getText());
//                pr.setDOB(txt_DOB.getText());
//                pr.setAge(Integer.parseInt(txt_Age.getText()));
//                pr.setUniqueID(txt_UniqueID.getText());
//                PTD.addNewPatient(pr);
                UniqueID = txt_UniqueID.getText();
//                searchPerson();
//                Person pr = new Person();
                Person person = null;
                for (Person pr : PRD.getPersonDirectory()) {
                    if (pr.getPersonUniqueID().equalsIgnoreCase(UniqueID)) {
                        txt_LastName.setText(pr.getPersonLastName());
                        txt_FirstName.setText(pr.getPersonFirstName());
                        txt_DOB.setText(pr.getPersonDOB());
                        txt_Age.setText(pr.getPersonAge().toString());
                        person = pr;
                    }
                }

                try {
                    Patient p = person.getPatient();
                    p.setPatientID(UniqueID);
                    message.showMessageDialog(this, "New Patient added successfully");
                    clearFields();
                } catch (NullPointerException npe) {
                    message.showMessageDialog(this, "Patient Record not found.");
                }

//                patient.setPerson(pr);
                
//                }
        }
    }//GEN-LAST:event_lbl_SaveActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        bottom_panel.remove(this);
        CardLayout layout = (CardLayout) bottom_panel.getLayout();
        layout.previous(bottom_panel);
    }//GEN-LAST:event_btn_backActionPerformed

    private void txt_LastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_LastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_LastNameActionPerformed

    private void txt_DOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_DOBActionPerformed

    private void txt_FirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_FirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_FirstNameActionPerformed

    private void txt_UniqueIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_UniqueIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_UniqueIDActionPerformed

    private void lbl_SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_SEARCHActionPerformed
        // TODO add your handling code here:
        UniqueID = txt_UniqueID.getText();
        searchPerson();
        if (personfound == false){
            JOptionPane.showMessageDialog(this, "Person with Unique ID : "+UniqueID+" not found.");
        }
    }//GEN-LAST:event_lbl_SEARCHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbl_Age;
    private javax.swing.JLabel lbl_Age1;
    private javax.swing.JLabel lbl_DOB;
    private javax.swing.JLabel lbl_FirstName;
    private javax.swing.JLabel lbl_Name;
    private javax.swing.JLabel lbl_Name1;
    private javax.swing.JLabel lbl_PersonalInfo_Title;
    private javax.swing.JButton lbl_SEARCH;
    private javax.swing.JButton lbl_Save;
    private javax.swing.JLabel lbl_title;
    private javax.swing.JLabel lbl_title1;
    private javax.swing.JTextField txt_Age;
    private javax.swing.JTextField txt_DOB;
    private javax.swing.JTextField txt_FirstName;
    private javax.swing.JTextField txt_LastName;
    private javax.swing.JTextField txt_UniqueID;
    // End of variables declaration//GEN-END:variables

    private int check_validations() {
        int errorCode = 0;

        if (txt_LastName.getText().isEmpty()
                | !Pattern.matches("[a-zA-Z]+", txt_LastName.getText())) {
            errorCode = 1;
        } else if (!txt_FirstName.getText().isEmpty()
                & !Pattern.matches("[a-zA-Z]+", txt_FirstName.getText())) {
            errorCode = 1;
        } else if (txt_DOB.getText().isEmpty()
                | !Pattern.matches(
                        "(0[1-9]|1[012])\\/(0[1-9]|[12][0-9]|3[01])\\/([0-9]{4})$",
                        txt_DOB.getText())) {
            errorCode = 2;
        }
        return errorCode;
    }

//    private void check_Personexistance() {
//        
//        for (Person pr: PRD.getPersonDirectory()){
//            if (pr.getUniqueID().equalsIgnoreCase(txt_UniqueID.getText())){
//                personfound = true;
//            } 
//        }
//    }
    private void searchPerson() {
        for (Person pr : PRD.getPersonDirectory()) {
            if (pr.getPersonUniqueID().equalsIgnoreCase(UniqueID)) {
                txt_LastName.setText(pr.getPersonLastName());
                txt_FirstName.setText(pr.getPersonFirstName());
                txt_DOB.setText(pr.getPersonDOB());
                txt_Age.setText(pr.getPersonAge().toString());
                personfound = true;
            }
        }
    }

    private void clearFields() {
        txt_UniqueID.setText("");
        txt_LastName.setText("");
        txt_FirstName.setText("");
        txt_DOB.setText("");
        txt_Age.setText("");
    }
}
